<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.biomedis</groupId>
    <artifactId>BiomedisMAir3</artifactId>
    <version>1.0-SNAPSHOT</version>
   <packaging>jar</packaging>

    <name>BiomedisMAir3</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <mainClass>ru.biomedis.biomedismair3.App</mainClass>
        <java-version>1.8</java-version>     
        <programmVersionMajor>1</programmVersionMajor>
        <programmVersionMinor>0</programmVersionMinor>
        <log4j.version>2.5</log4j.version>

    </properties>

    <repositories>
        <repository>
            <id>updater_repo-mvn-repo</id>
            <url>https://raw.github.com/lightway82/updater_repo/mvn-repo</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>


 <!--****** фейковый раздел системы контроля версий ******-->
<scm>
    <connection>scm:svn:http://127.0.0.1/svn/my-project</connection>
    <developerConnection>scm:svn:https://127.0.0.1/svn/my-project</developerConnection>
    <tag>HEAD</tag>
    <url>http://127.0.0.1/websvn/my-project</url>
</scm>
    <organization>
        <!-- Used as the 'Vendor' for JNLP generation -->
        <name>Biomedis</name>
    </organization>

    <build>
        <plugins>
           
            
            
<!-- Использовать для продакшена, чтобы получить единый архив со всеми зависимостями
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin> 
           
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/../bin/javafxpackager</executable>
                            <arguments>
                                <argument>-createjar</argument>
                                <argument>-nocss2bin</argument>
                                <argument>-appclass</argument>
                                <argument>${mainClass}</argument>
                                <argument>-srcdir</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-outdir</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>-outfile</argument>
                                <argument>${project.build.finalName}.jar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>exec</goal>                            
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <commandlineArgs>${runfx.args}</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>  
            </plugin>
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                   <execution>
                        <id>Run-jar</id>
                        <goals>
                            <goal>exec</goal>                            
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/java</executable>
                            <commandlineArgs> -jar "${project.build.directory}/${project.build.finalName}.jar  -encoding=UTF-8"</commandlineArgs>
                        </configuration>
                    </execution>

                    <execution>
                        <id>Run-Class</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <commandlineArgs>  -encoding=UTF-8</commandlineArgs>

                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                     <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArguments>
                        <bootclasspath>${sun.boot.class.path}${path.separator}${java.home}/lib/jfxrt.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            
            
             <!--****** Копирование зависимостей в папку lib *******-->
            <plugin> 
                <groupId>org.apache.maven.plugins</groupId> 
                <artifactId>maven-dependency-plugin</artifactId> 
                <configuration> 
                    <outputDirectory>${project.build.directory}/lib/</outputDirectory> 
                    <overWriteReleases>false</overWriteReleases> 
                    <overWriteSnapshots>false</overWriteSnapshots> 
                    <overWriteIfNewer>true</overWriteIfNewer>
                </configuration> 
                <executions> 
                    <execution> 
                        <id>copy-dependencies</id> 
                        <phase>package</phase> 
                        <goals> 
                            <goal>copy-dependencies</goal> 
                        </goals> 
                    </execution> 
                </executions> 
            </plugin>
             <!--****** Генерит ВЕРСИЮ СБОРКИ(ИНКРЕМЕНТ СОДЕРЖИТСЯ В ПРОПЕРТИ ФАЙЛЕ) *******-->
             <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <revisionOnScmFailure>1</revisionOnScmFailure>
                    <doCheck>true</doCheck>
                    <buildNumberPropertyName>buildNumber</buildNumberPropertyName>
                    <doUpdate>true</doUpdate>
                    <format>{0}.{1}-{2,date,yyyyMMdd}</format>
                   <items>
                        <item>${programmVersionMajor}</item>
                         <item>${programmVersionMinor}</item>
                        <item>timestamp</item>
                    </items>
                </configuration>
            </plugin>            
              <!--****** Генерит jar И  манифест *******-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                              <!--****** Указывает где либы лежат lib *******-->
                            <classpathPrefix>lib/</classpathPrefix>
                            <classpathLayoutType>simple</classpathLayoutType>
                            <mainClass>${mainClass}</mainClass>

                        </manifest>
                        <manifestEntries>
                            <Version>${buildNumber}</Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.zenjava</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>8.6.0</version>
                <configuration>
                    <mainClass></mainClass>
                    <jfxMainAppJarName>dist.jar</jfxMainAppJarName>
                    <vendor>Biomedis Ltd</vendor>
                    <identifier></identifier>
                    <nativeReleaseVersion>4.1</nativeReleaseVersion>
                    <needMenu>true</needMenu>
                    <appName>BiomedisMAir4</appName>
                </configuration>
                <!-- You should run this on you command-line: mvn jfx:native -->
               <!--
                <executions>
                    <execution>
                        <id>create-jfxjar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build-jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-native</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build-native</goal>
                        </goals>
                    </execution>
                </executions>
        -->
            </plugin>
        </plugins>


    </build>
    <dependencies>
        
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.196</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.eclipse.persistence/eclipselink -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.6.2</version>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.9.10</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.6</version>
        </dependency>


        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>3.0.6</version>
        </dependency>

        <dependency>
            <groupId>org.swinglabs</groupId>
            <artifactId>pdf-renderer</artifactId>
            <version>1.0.5</version>
        </dependency>

        <dependency>
            <groupId>com.mpatric</groupId>
            <artifactId>mp3agic</artifactId>
            <version>0.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.usb4java</groupId>
            <artifactId>usb4java</artifactId>
            <version>1.2.0</version>
        </dependency>

        <dependency>
            <groupId>org.anantacreative</groupId>
            <artifactId>updater</artifactId>
            <version>0.12.1</version>
        </dependency>
        <!--
        mp3agic

         Mp3File mp3file = new Mp3File("SomeMp3File.mp3");
       System.out.println("Length of this mp3 is: " + mp3file.getLengthInSeconds() + " seconds");
       -->

       <!-- net.sf.lamejb Из локального
       <dependency>
           <groupId>net.sf.lamejb</groupId>
           <artifactId>net.sf.lamejb</artifactId>
           <version>0.2.0</version>
       </dependency>-->

    </dependencies> 
</project>
